name: 'terraform-Azure'
# on:
#   push:
#     branches:
#     - main
#   pull_request:
on:
  workflow_dispatch:
  
env: 
      ROOT_PATH: '${{github.workspace}}/build/sample'
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest

    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v2

      # - name: 'Exporting data to env'
      #   run: |
      #     echo "`cat input/user-input.txt`" >> $GITHUB_ENV   

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.1
          terraform_wrapper: false
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.2.1
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}  
          # args: '-backend-config="subscription_id=${{ secrets.HUB_SUBSCRIPTION_ID }}" 
          #        -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" 
          #        -backend-config="resource_group_name=${{ secrets.AZURE_BE_RESOURCE_GROUP_NAME }}" 
          #        -backend-config="storage_account_name=${{ secrets.AZURE_BE_STORAGE_ACCOUNT_NAME }}"  
          #        -backend-config="container_name=${{ secrets.AZURE_BE_CONTAINER_NAME }}" 
          #        -backend-config="key=${{ env.subscriptionName }}/${{ env.app }}-create-storage-account/${{env.ticket_id}}.tfstate"'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.2.1
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.ROOT_PATH }} 
      
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.2.1
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.ROOT_PATH }}
          args: '-var-file="../input/user-input.tfvars" -out=tfplan.binary'
        env: 
          ARM_SUBSCRIPTION_ID: ${{ env.subscriptionId }}
