name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      TFAction:
        description: "Terraform Action- Apply or Destroy"     
        required: true
        default: "apply"

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: test
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TerraformBackendStorageAccount: "sample045696"
      TerraformBackendResourceGroup: "myPackergroup"
      TerraformBackendStorageContainer: "tfstate"           
      
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config=storage_account_name=$TerraformBackendStorageAccount -backend-config=container_name=$TerraformBackendStorageContainer -backend-config=key=dev.tfstate -backend-config=resource_group_name=$TerraformBackendResourceGroup -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" -backend-config=tenant_id="$ARM_TENANT_ID" -backend-config=client_id="$ARM_CLIENT_ID" -backend-config=client_secret="$ARM_CLIENT_SECRET"

    - name: Terraform Plan
      run: terraform plan -var-file="input/user-input.tfvars" -out=plan.tfplan
    - name: Terraform Apply
      if: ${{ inputs.TFAction == 'apply'}}  
      run: terraform apply -input=false -auto-approve plan.tfplan

    - name: Terraform Destroy
      if: ${{ inputs.TFAction == 'destroy' }} 
      run: terraform destroy -input=false -auto-approve
